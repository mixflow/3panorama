/*
 * A panorama viewer base on three.js.
 * Panarama is a type of image which can be watched in 360 degree horizonally and 180 degree vertically.
 *
 * @license Apache 2.0
 * @author MixFlow
 * @date 2017-08
 */
(function(){window.threePanorama=function(e){var n,t,i,r,a,o,d,s,u,c,l,m,h,g,E,w,f,v;o={container:document.body,image:void 0,fov:65,enableDragNewImage:!0,mouseSensitivity:.1,lonlat:[0,0],sphere:{radius:500},debug:{imageLoadProgress:!1,lonlat:!1}},e=e||{};for(u in o)v=o[u],u in e||(e[u]=v);if(null==e.image)throw{type:"No image provided.",msg:"Please fill panorama image path(string) in the parameter 'image' of settings"};return r="string"==typeof e.container?document.querySelectorAll(setting.container):e.container,l=e.lonlat[0],c=e.lonlat[1],d=function(){var n,i,a,o,d,u,c;return n=new THREE.PerspectiveCamera(e.fov,window.innerWidth/window.innerHeight,1,1100),n.target=new THREE.Vector3(0,0,0),(i=new THREE.SphereBufferGeometry(e.sphere.radius,50,50)).scale(-1,1,1),c=(new THREE.TextureLoader).load(e.image),a=new THREE.MeshBasicMaterial({map:c}),o=new THREE.Mesh(i,a),(u=new THREE.Scene).add(o),d=s(),r.appendChild(d.domElement),t(d.domElement),{camera:n,mesh:o,scene:u,renderer:d}},s=function(){var e;return(e=new THREE.WebGLRenderer).setPixelRatio(window.devicePixelRatio),e.setSize(window.innerWidth,window.innerHeight),e},t=function(n){var t,i,r,a,o,d,s,u;return s=0,u=0,d=0,o=0,t=!1,i=function(e){return e.preventDefault(),t=!0,s=e.clientX,u=e.clientY,d=l,o=c},r=function(n){if(!0===t&&(l=(s-n.clientX)*e.mouseSensitivity+d,c=(n.clientY-u)*e.mouseSensitivity+o,e.debug.lonlat))return console.log("longitude: ",l,"latitude: ",c)},a=function(e){return t=!1},n.addEventListener("mousedown",i,!1),n.addEventListener("mousemove",r,!1),n.addEventListener("mouseup",a,!1)},h=d(),i=h.camera,m=h.mesh,E=h.scene,g=h.renderer,n=function(){requestAnimationFrame(n),w()},w=function(){return f(),g.render(E,i)},f=function(){var n,t,r,a,o,d;return c=Math.max(-85,Math.min(85,c)),n=THREE.Math.degToRad(90-c),r=THREE.Math.degToRad(l),t=e.sphere.radius,a=t*Math.sin(n)*Math.cos(r),o=t*Math.cos(n),d=t*Math.sin(n)*Math.sin(r),i.lookAt(new THREE.Vector3(a,o,d))},n(),a=e.debug,{container:r,camera:i,mesh:m,scene:E,renderer:g,debugSettings:a}}}).call(this);