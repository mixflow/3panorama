/*
 * A panorama viewer base on three.js.
 * Panarama is a type of image which can be watched in 360 degree horizonally and 180 degree vertically.
 *
 * @license Apache 2.0
 * @author MixFlow
 * @date 2017-08
 */
(function(){window.threePanorama=function(e){var n,t,i,r,a,o,d,c,s,u,h,l,m,g,w,E,f,v;o={container:document.body,image:void 0,fov:65,enableDragNewImage:!0,mouseSensitivity:.1,lonlat:[0,0],sphere:{radius:500},debug:{imageLoadProgress:!1,lonlat:!1}},e=e||{};for(s in o)v=o[s],s in e||(e[s]=v);if(null==e.image)throw{type:"No image provided.",msg:"Please fill panorama image path(string) in the parameter 'image' of settings"};return r="string"==typeof e.container?document.querySelectorAll(setting.container):e.container,h=e.lonlat[0],u=e.lonlat[1],d=function(){var n,i,a,o,d,s,u;return n=new THREE.PerspectiveCamera(e.fov,window.innerWidth/window.innerHeight,1,1100),n.target=new THREE.Vector3(0,0,0),(i=new THREE.SphereBufferGeometry(e.sphere.radius,50,50)).scale(-1,1,1),u=(new THREE.TextureLoader).load(e.image),a=new THREE.MeshBasicMaterial({map:u}),o=new THREE.Mesh(i,a),(s=new THREE.Scene).add(o),d=c(),r.appendChild(d.domElement),t(d.domElement),{camera:n,mesh:o,scene:s,renderer:d}},c=function(){var e;return(e=new THREE.WebGLRenderer).setPixelRatio(window.devicePixelRatio),e.setSize(window.innerWidth,window.innerHeight),e},t=function(n){var t,i,r,a,o,d,c,s,l,m,g,w,E,f;return d=0,c=0,o=0,a=0,s=!1,r=function(e){return function(n){return n.preventDefault(),s=!0,d=e?n.changedTouches[0].clientX:n.clientX,c=e?n.changedTouches[0].clientY:n.clientY,o=h,a=u}},i=function(n){return function(t){var i,r,l;if(!0===s&&(r=n?t.changedTouches[0].clientX:t.clientX,l=n?t.changedTouches[0].clientY:t.clientY,i=e.mouseSensitivity,h=(d-r)*i+o,u=(l-c)*i+a,e.debug.lonlat))return console.log("longitude: ",h,"latitude: ",u)}},t=function(e){return s=!1},l=r(!1),m=i(!1),g=t,n.addEventListener("mousedown",l,!1),n.addEventListener("mousemove",m,!1),n.addEventListener("mouseup",g,!1),f=r(!0),E=i(!0),w=t,n.addEventListener("touchstart",f,!1),n.addEventListener("touchmove",E,!1),n.addEventListener("touchend",w,!1)},function(e){return i.aspect=window.innerWidth/window.innerHeight,i.updateProjectionMatrix(),g.setSize(window.innerWidth,window.innerHeight)},m=d(),i=m.camera,l=m.mesh,w=m.scene,g=m.renderer,n=function(){requestAnimationFrame(n),E()},E=function(){return f(),g.render(w,i)},f=function(){var n,t,r,a,o,d;return u=Math.max(-85,Math.min(85,u)),n=THREE.Math.degToRad(90-u),r=THREE.Math.degToRad(h),t=e.sphere.radius,a=t*Math.sin(n)*Math.cos(r),o=t*Math.cos(n),d=t*Math.sin(n)*Math.sin(r),i.lookAt(new THREE.Vector3(a,o,d))},n(),a=e.debug,{container:r,camera:i,mesh:l,scene:w,renderer:g,debugSettings:a}}}).call(this);